{"ast":null,"code":"/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport onsElements from '../ons/elements.js';\nimport util from '../ons/util.js';\nimport autoStyle from '../ons/autostyle.js';\nimport ModifierUtil from '../ons/internal/modifier-util.js';\nimport BaseElement from './base/base-element.js';\nconst defaultClassName = 'list-header';\nconst scheme = {\n  '': 'list-header--*'\n};\n\n/**\n * @element ons-list-header\n * @category list\n * @description\n *   [en]Header element for list items. Must be put inside the `<ons-list>` component.[/en]\n *   [ja]リスト要素に使用するヘッダー用コンポーネント。ons-listと共に使用します。[/ja]\n * @seealso ons-list\n *   [en]The `<ons-list>` component[/en]\n *   [ja]ons-listコンポーネント[/ja]\n * @seealso ons-list-item\n *   [en]The `<ons-list-item>` component[/en]\n *   [ja]ons-list-itemコンポーネント[/ja]\n * @codepen yxcCt\n * @tutorial vanilla/Reference/list\n * @modifier material\n *   [en]Display a Material Design list header.[/en]\n *   [ja][/ja]\n * @example\n * <ons-list>\n *   <ons-list-header>Header Text</ons-list-header>\n *   <ons-list-item>Item</ons-list-item>\n *   <ons-list-item>Item</ons-list-item>\n * </ons-list>\n */\nexport default class ListHeaderElement extends BaseElement {\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the list header.[/en]\n   *   [ja]ヘッダーの表現を指定します。[/ja]\n   */\n\n  constructor() {\n    super();\n    this._compile();\n  }\n  _compile() {\n    autoStyle.prepare(this);\n    this.classList.add(defaultClassName);\n    ModifierUtil.initModifier(this, scheme);\n  }\n  static get observedAttributes() {\n    return ['modifier', 'class'];\n  }\n  attributeChangedCallback(name, last, current) {\n    switch (name) {\n      case 'class':\n        util.restoreClass(this, defaultClassName, scheme);\n        break;\n      case 'modifier':\n        ModifierUtil.onModifierChanged(last, current, this, scheme);\n        break;\n    }\n  }\n}\nonsElements.ListHeader = ListHeaderElement;\ncustomElements.define('ons-list-header', ListHeaderElement);","map":{"version":3,"names":["onsElements","util","autoStyle","ModifierUtil","BaseElement","defaultClassName","scheme","ListHeaderElement","constructor","_compile","prepare","classList","add","initModifier","observedAttributes","attributeChangedCallback","name","last","current","restoreClass","onModifierChanged","ListHeader","customElements","define"],"sources":["/Users/meenho/Documents/A_techlmh/vueTests/vueOnsenUITabMenuTestCode/my-onsen-app/node_modules/onsenui/esm/elements/ons-list-header.js"],"sourcesContent":["/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport onsElements from '../ons/elements.js';\nimport util from '../ons/util.js';\nimport autoStyle from '../ons/autostyle.js';\nimport ModifierUtil from '../ons/internal/modifier-util.js';\nimport BaseElement from './base/base-element.js';\n\nconst defaultClassName = 'list-header';\nconst scheme = {'': 'list-header--*'};\n\n/**\n * @element ons-list-header\n * @category list\n * @description\n *   [en]Header element for list items. Must be put inside the `<ons-list>` component.[/en]\n *   [ja]リスト要素に使用するヘッダー用コンポーネント。ons-listと共に使用します。[/ja]\n * @seealso ons-list\n *   [en]The `<ons-list>` component[/en]\n *   [ja]ons-listコンポーネント[/ja]\n * @seealso ons-list-item\n *   [en]The `<ons-list-item>` component[/en]\n *   [ja]ons-list-itemコンポーネント[/ja]\n * @codepen yxcCt\n * @tutorial vanilla/Reference/list\n * @modifier material\n *   [en]Display a Material Design list header.[/en]\n *   [ja][/ja]\n * @example\n * <ons-list>\n *   <ons-list-header>Header Text</ons-list-header>\n *   <ons-list-item>Item</ons-list-item>\n *   <ons-list-item>Item</ons-list-item>\n * </ons-list>\n */\nexport default class ListHeaderElement extends BaseElement {\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the list header.[/en]\n   *   [ja]ヘッダーの表現を指定します。[/ja]\n   */\n\n  constructor() {\n    super();\n\n    this._compile();\n  }\n\n  _compile() {\n    autoStyle.prepare(this);\n    this.classList.add(defaultClassName);\n    ModifierUtil.initModifier(this, scheme);\n  }\n\n  static get observedAttributes() {\n    return ['modifier', 'class'];\n  }\n\n  attributeChangedCallback(name, last, current) {\n    switch (name) {\n      case 'class':\n        util.restoreClass(this, defaultClassName, scheme);\n        break;\n      case 'modifier':\n        ModifierUtil.onModifierChanged(last, current, this, scheme);\n        break;\n    }\n  }\n}\n\nonsElements.ListHeader = ListHeaderElement;\ncustomElements.define('ons-list-header', ListHeaderElement);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,WAAW,MAAM,wBAAwB;AAEhD,MAAMC,gBAAgB,GAAG,aAAa;AACtC,MAAMC,MAAM,GAAG;EAAC,EAAE,EAAE;AAAgB,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,iBAAiB,SAASH,WAAW,CAAC;EAEzD;AACF;AACA;AACA;AACA;AACA;AACA;;EAEEI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB;EAEAA,QAAQA,CAAA,EAAG;IACTP,SAAS,CAACQ,OAAO,CAAC,IAAI,CAAC;IACvB,IAAI,CAACC,SAAS,CAACC,GAAG,CAACP,gBAAgB,CAAC;IACpCF,YAAY,CAACU,YAAY,CAAC,IAAI,EAAEP,MAAM,CAAC;EACzC;EAEA,WAAWQ,kBAAkBA,CAAA,EAAG;IAC9B,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC;EAC9B;EAEAC,wBAAwBA,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;IAC5C,QAAQF,IAAI;MACV,KAAK,OAAO;QACVf,IAAI,CAACkB,YAAY,CAAC,IAAI,EAAEd,gBAAgB,EAAEC,MAAM,CAAC;QACjD;MACF,KAAK,UAAU;QACbH,YAAY,CAACiB,iBAAiB,CAACH,IAAI,EAAEC,OAAO,EAAE,IAAI,EAAEZ,MAAM,CAAC;QAC3D;IACJ;EACF;AACF;AAEAN,WAAW,CAACqB,UAAU,GAAGd,iBAAiB;AAC1Ce,cAAc,CAACC,MAAM,CAAC,iBAAiB,EAAEhB,iBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}