{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n(function () {\n  'use strict';\n\n  var g = new function () {}();\n  var aa = new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));\n  function k(b) {\n    var a = aa.has(b);\n    b = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);\n    return !a && b;\n  }\n  function l(b) {\n    var a = b.isConnected;\n    if (void 0 !== a) return a;\n    for (; b && !(b.__CE_isImportDocument || b instanceof Document);) b = b.parentNode || (window.ShadowRoot && b instanceof ShadowRoot ? b.host : void 0);\n    return !(!b || !(b.__CE_isImportDocument || b instanceof Document));\n  }\n  function m(b, a) {\n    for (; a && a !== b && !a.nextSibling;) a = a.parentNode;\n    return a && a !== b ? a.nextSibling : null;\n  }\n  function n(b, a, e) {\n    e = e ? e : new Set();\n    for (var c = b; c;) {\n      if (c.nodeType === Node.ELEMENT_NODE) {\n        var d = c;\n        a(d);\n        var h = d.localName;\n        if (\"link\" === h && \"import\" === d.getAttribute(\"rel\")) {\n          c = d.import;\n          if (c instanceof Node && !e.has(c)) for (e.add(c), c = c.firstChild; c; c = c.nextSibling) n(c, a, e);\n          c = m(b, d);\n          continue;\n        } else if (\"template\" === h) {\n          c = m(b, d);\n          continue;\n        }\n        if (d = d.__CE_shadowRoot) for (d = d.firstChild; d; d = d.nextSibling) n(d, a, e);\n      }\n      c = c.firstChild ? c.firstChild : m(b, c);\n    }\n  }\n  function q(b, a, e) {\n    b[a] = e;\n  }\n  ;\n  function r() {\n    this.a = new Map();\n    this.f = new Map();\n    this.c = [];\n    this.b = !1;\n  }\n  function ba(b, a, e) {\n    b.a.set(a, e);\n    b.f.set(e.constructor, e);\n  }\n  function t(b, a) {\n    b.b = !0;\n    b.c.push(a);\n  }\n  function v(b, a) {\n    b.b && n(a, function (a) {\n      return w(b, a);\n    });\n  }\n  function w(b, a) {\n    if (b.b && !a.__CE_patched) {\n      a.__CE_patched = !0;\n      for (var e = 0; e < b.c.length; e++) b.c[e](a);\n    }\n  }\n  function x(b, a) {\n    var e = [];\n    n(a, function (b) {\n      return e.push(b);\n    });\n    for (a = 0; a < e.length; a++) {\n      var c = e[a];\n      1 === c.__CE_state ? l(c) && b.connectedCallback(c) : y(b, c);\n    }\n  }\n  function z(b, a) {\n    var e = [];\n    n(a, function (b) {\n      return e.push(b);\n    });\n    for (a = 0; a < e.length; a++) {\n      var c = e[a];\n      1 === c.__CE_state && b.disconnectedCallback(c);\n    }\n  }\n  function A(b, a, e) {\n    e = e ? e : new Set();\n    var c = [];\n    n(a, function (d) {\n      if (\"link\" === d.localName && \"import\" === d.getAttribute(\"rel\")) {\n        var a = d.import;\n        a instanceof Node && \"complete\" === a.readyState ? (a.__CE_isImportDocument = !0, a.__CE_hasRegistry = !0) : d.addEventListener(\"load\", function () {\n          var a = d.import;\n          a.__CE_documentLoadHandled || (a.__CE_documentLoadHandled = !0, a.__CE_isImportDocument = !0, a.__CE_hasRegistry = !0, new Set(e), e.delete(a), A(b, a, e));\n        });\n      } else c.push(d);\n    }, e);\n    if (b.b) for (a = 0; a < c.length; a++) w(b, c[a]);\n    for (a = 0; a < c.length; a++) y(b, c[a]);\n  }\n  function y(b, a) {\n    if (void 0 === a.__CE_state) {\n      var e = b.a.get(a.localName);\n      if (e) {\n        e.constructionStack.push(a);\n        var c = e.constructor;\n        try {\n          try {\n            if (new c() !== a) throw Error(\"The custom element constructor did not produce the element being upgraded.\");\n          } finally {\n            e.constructionStack.pop();\n          }\n        } catch (f) {\n          throw a.__CE_state = 2, f;\n        }\n        a.__CE_state = 1;\n        a.__CE_definition = e;\n        if (e.attributeChangedCallback) for (e = e.observedAttributes, c = 0; c < e.length; c++) {\n          var d = e[c],\n            h = a.getAttribute(d);\n          null !== h && b.attributeChangedCallback(a, d, null, h, null);\n        }\n        l(a) && b.connectedCallback(a);\n      }\n    }\n  }\n  r.prototype.connectedCallback = function (b) {\n    var a = b.__CE_definition;\n    a.connectedCallback && a.connectedCallback.call(b);\n    b.i = !0;\n  };\n  r.prototype.disconnectedCallback = function (b) {\n    b.i || this.connectedCallback(b);\n    var a = b.__CE_definition;\n    a.disconnectedCallback && a.disconnectedCallback.call(b);\n    b.i = void 0;\n  };\n  r.prototype.attributeChangedCallback = function (b, a, e, c, d) {\n    var h = b.__CE_definition;\n    h.attributeChangedCallback && -1 < h.observedAttributes.indexOf(a) && h.attributeChangedCallback.call(b, a, e, c, d);\n  };\n  function B(b, a) {\n    this.c = b;\n    this.a = a;\n    this.b = void 0;\n    A(this.c, this.a);\n    \"loading\" === this.a.readyState && (this.b = new MutationObserver(this.f.bind(this)), this.b.observe(this.a, {\n      childList: !0,\n      subtree: !0\n    }));\n  }\n  function C(b) {\n    b.b && b.b.disconnect();\n  }\n  B.prototype.f = function (b) {\n    var a = this.a.readyState;\n    \"interactive\" !== a && \"complete\" !== a || C(this);\n    for (a = 0; a < b.length; a++) for (var e = b[a].addedNodes, c = 0; c < e.length; c++) A(this.c, e[c]);\n  };\n  function ca() {\n    var b = this;\n    this.b = this.a = void 0;\n    this.c = new Promise(function (a) {\n      b.b = a;\n      b.a && a(b.a);\n    });\n  }\n  function D(b) {\n    if (b.a) throw Error(\"Already resolved.\");\n    b.a = void 0;\n    b.b && b.b(void 0);\n  }\n  ;\n  function E(b) {\n    this.f = !1;\n    this.a = b;\n    this.h = new Map();\n    this.g = function (b) {\n      return b();\n    };\n    this.b = !1;\n    this.c = [];\n    this.l = new B(b, document);\n  }\n  E.prototype.m = function (b, a) {\n    var e = this;\n    if (!(a instanceof Function)) throw new TypeError(\"Custom element constructors must be functions.\");\n    if (!k(b)) throw new SyntaxError(\"The element name '\" + b + \"' is not valid.\");\n    if (this.a.a.get(b)) throw Error(\"A custom element with name '\" + b + \"' has already been defined.\");\n    if (this.f) throw Error(\"A custom element is already being defined.\");\n    this.f = !0;\n    var c, d, h, f, u;\n    try {\n      var p = function (b) {\n          var a = P[b];\n          if (void 0 !== a && !(a instanceof Function)) throw Error(\"The '\" + b + \"' callback must be a function.\");\n          return a;\n        },\n        P = a.prototype;\n      if (!(P instanceof Object)) throw new TypeError(\"The custom element constructor's prototype is not an object.\");\n      c = p(\"connectedCallback\");\n      d = p(\"disconnectedCallback\");\n      h = p(\"adoptedCallback\");\n      f = p(\"attributeChangedCallback\");\n      u = a.observedAttributes || [];\n    } catch (va) {\n      return;\n    } finally {\n      this.f = !1;\n    }\n    ba(this.a, b, {\n      localName: b,\n      constructor: a,\n      connectedCallback: c,\n      disconnectedCallback: d,\n      adoptedCallback: h,\n      attributeChangedCallback: f,\n      observedAttributes: u,\n      constructionStack: []\n    });\n    this.c.push(b);\n    this.b || (this.b = !0, this.g(function () {\n      if (!1 !== e.b) for (e.b = !1, A(e.a, document); 0 < e.c.length;) {\n        var b = e.c.shift();\n        (b = e.h.get(b)) && D(b);\n      }\n    }));\n  };\n  E.prototype.get = function (b) {\n    if (b = this.a.a.get(b)) return b.constructor;\n  };\n  E.prototype.s = function (b) {\n    if (!k(b)) return Promise.reject(new SyntaxError(\"'\" + b + \"' is not a valid custom element name.\"));\n    var a = this.h.get(b);\n    if (a) return a.c;\n    a = new ca();\n    this.h.set(b, a);\n    this.a.a.get(b) && -1 === this.c.indexOf(b) && D(a);\n    return a.c;\n  };\n  E.prototype.o = function (b) {\n    C(this.l);\n    var a = this.g;\n    this.g = function (e) {\n      return b(function () {\n        return a(e);\n      });\n    };\n  };\n  window.CustomElementRegistry = E;\n  E.prototype.define = E.prototype.m;\n  E.prototype.get = E.prototype.get;\n  E.prototype.whenDefined = E.prototype.s;\n  E.prototype.polyfillWrapFlushCallback = E.prototype.o;\n  var F = window.Document.prototype.createElement,\n    da = window.Document.prototype.createElementNS,\n    ea = window.Document.prototype.importNode,\n    fa = window.Document.prototype.prepend,\n    ga = window.Document.prototype.append,\n    G = window.Node.prototype.cloneNode,\n    H = window.Node.prototype.appendChild,\n    I = window.Node.prototype.insertBefore,\n    J = window.Node.prototype.removeChild,\n    K = window.Node.prototype.replaceChild,\n    L = Object.getOwnPropertyDescriptor(window.Node.prototype, \"textContent\"),\n    M = window.Element.prototype.attachShadow,\n    N = Object.getOwnPropertyDescriptor(window.Element.prototype, \"innerHTML\"),\n    O = window.Element.prototype.getAttribute,\n    Q = window.Element.prototype.setAttribute,\n    R = window.Element.prototype.removeAttribute,\n    S = window.Element.prototype.getAttributeNS,\n    T = window.Element.prototype.setAttributeNS,\n    U = window.Element.prototype.removeAttributeNS,\n    V = window.Element.prototype.insertAdjacentElement,\n    ha = window.Element.prototype.prepend,\n    ia = window.Element.prototype.append,\n    ja = window.Element.prototype.before,\n    ka = window.Element.prototype.after,\n    la = window.Element.prototype.replaceWith,\n    ma = window.Element.prototype.remove,\n    na = window.HTMLElement,\n    W = Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, \"innerHTML\"),\n    X = window.HTMLElement.prototype.insertAdjacentElement;\n  function oa() {\n    var b = Y;\n    window.HTMLElement = function () {\n      function a() {\n        var a = this.constructor,\n          c = b.f.get(a);\n        if (!c) throw Error(\"The custom element being constructed was not registered with `customElements`.\");\n        var d = c.constructionStack;\n        if (!d.length) return d = F.call(document, c.localName), Object.setPrototypeOf(d, a.prototype), d.__CE_state = 1, d.__CE_definition = c, w(b, d), d;\n        var c = d.length - 1,\n          h = d[c];\n        if (h === g) throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\n        d[c] = g;\n        Object.setPrototypeOf(h, a.prototype);\n        w(b, h);\n        return h;\n      }\n      a.prototype = na.prototype;\n      return a;\n    }();\n  }\n  ;\n  function pa(b, a, e) {\n    a.prepend = function (a) {\n      for (var d = [], c = 0; c < arguments.length; ++c) d[c - 0] = arguments[c];\n      c = d.filter(function (b) {\n        return b instanceof Node && l(b);\n      });\n      e.j.apply(this, d);\n      for (var f = 0; f < c.length; f++) z(b, c[f]);\n      if (l(this)) for (c = 0; c < d.length; c++) f = d[c], f instanceof Element && x(b, f);\n    };\n    a.append = function (a) {\n      for (var d = [], c = 0; c < arguments.length; ++c) d[c - 0] = arguments[c];\n      c = d.filter(function (b) {\n        return b instanceof Node && l(b);\n      });\n      e.append.apply(this, d);\n      for (var f = 0; f < c.length; f++) z(b, c[f]);\n      if (l(this)) for (c = 0; c < d.length; c++) f = d[c], f instanceof Element && x(b, f);\n    };\n  }\n  ;\n  function qa() {\n    var b = Y;\n    q(Document.prototype, \"createElement\", function (a) {\n      if (this.__CE_hasRegistry) {\n        var e = b.a.get(a);\n        if (e) return new e.constructor();\n      }\n      a = F.call(this, a);\n      w(b, a);\n      return a;\n    });\n    q(Document.prototype, \"importNode\", function (a, e) {\n      a = ea.call(this, a, e);\n      this.__CE_hasRegistry ? A(b, a) : v(b, a);\n      return a;\n    });\n    q(Document.prototype, \"createElementNS\", function (a, e) {\n      if (this.__CE_hasRegistry && (null === a || \"http://www.w3.org/1999/xhtml\" === a)) {\n        var c = b.a.get(e);\n        if (c) return new c.constructor();\n      }\n      a = da.call(this, a, e);\n      w(b, a);\n      return a;\n    });\n    pa(b, Document.prototype, {\n      j: fa,\n      append: ga\n    });\n  }\n  ;\n  function ra() {\n    var b = Y;\n    function a(a, c) {\n      Object.defineProperty(a, \"textContent\", {\n        enumerable: c.enumerable,\n        configurable: !0,\n        get: c.get,\n        set: function (a) {\n          if (this.nodeType === Node.TEXT_NODE) c.set.call(this, a);else {\n            var d = void 0;\n            if (this.firstChild) {\n              var e = this.childNodes,\n                u = e.length;\n              if (0 < u && l(this)) for (var d = Array(u), p = 0; p < u; p++) d[p] = e[p];\n            }\n            c.set.call(this, a);\n            if (d) for (a = 0; a < d.length; a++) z(b, d[a]);\n          }\n        }\n      });\n    }\n    q(Node.prototype, \"insertBefore\", function (a, c) {\n      if (a instanceof DocumentFragment) {\n        var d = Array.prototype.slice.apply(a.childNodes);\n        a = I.call(this, a, c);\n        if (l(this)) for (c = 0; c < d.length; c++) x(b, d[c]);\n        return a;\n      }\n      d = l(a);\n      c = I.call(this, a, c);\n      d && z(b, a);\n      l(this) && x(b, a);\n      return c;\n    });\n    q(Node.prototype, \"appendChild\", function (a) {\n      if (a instanceof DocumentFragment) {\n        var c = Array.prototype.slice.apply(a.childNodes);\n        a = H.call(this, a);\n        if (l(this)) for (var d = 0; d < c.length; d++) x(b, c[d]);\n        return a;\n      }\n      c = l(a);\n      d = H.call(this, a);\n      c && z(b, a);\n      l(this) && x(b, a);\n      return d;\n    });\n    q(Node.prototype, \"cloneNode\", function (a) {\n      a = G.call(this, a);\n      this.ownerDocument.__CE_hasRegistry ? A(b, a) : v(b, a);\n      return a;\n    });\n    q(Node.prototype, \"removeChild\", function (a) {\n      var c = l(a),\n        d = J.call(this, a);\n      c && z(b, a);\n      return d;\n    });\n    q(Node.prototype, \"replaceChild\", function (a, c) {\n      if (a instanceof DocumentFragment) {\n        var d = Array.prototype.slice.apply(a.childNodes);\n        a = K.call(this, a, c);\n        if (l(this)) for (z(b, c), c = 0; c < d.length; c++) x(b, d[c]);\n        return a;\n      }\n      var d = l(a),\n        e = K.call(this, a, c),\n        f = l(this);\n      f && z(b, c);\n      d && z(b, a);\n      f && x(b, a);\n      return e;\n    });\n    L && L.get ? a(Node.prototype, L) : t(b, function (b) {\n      a(b, {\n        enumerable: !0,\n        configurable: !0,\n        get: function () {\n          for (var a = [], b = 0; b < this.childNodes.length; b++) a.push(this.childNodes[b].textContent);\n          return a.join(\"\");\n        },\n        set: function (a) {\n          for (; this.firstChild;) J.call(this, this.firstChild);\n          H.call(this, document.createTextNode(a));\n        }\n      });\n    });\n  }\n  ;\n  function sa(b) {\n    var a = Element.prototype;\n    a.before = function (a) {\n      for (var c = [], d = 0; d < arguments.length; ++d) c[d - 0] = arguments[d];\n      d = c.filter(function (a) {\n        return a instanceof Node && l(a);\n      });\n      ja.apply(this, c);\n      for (var e = 0; e < d.length; e++) z(b, d[e]);\n      if (l(this)) for (d = 0; d < c.length; d++) e = c[d], e instanceof Element && x(b, e);\n    };\n    a.after = function (a) {\n      for (var c = [], d = 0; d < arguments.length; ++d) c[d - 0] = arguments[d];\n      d = c.filter(function (a) {\n        return a instanceof Node && l(a);\n      });\n      ka.apply(this, c);\n      for (var e = 0; e < d.length; e++) z(b, d[e]);\n      if (l(this)) for (d = 0; d < c.length; d++) e = c[d], e instanceof Element && x(b, e);\n    };\n    a.replaceWith = function (a) {\n      for (var c = [], d = 0; d < arguments.length; ++d) c[d - 0] = arguments[d];\n      var d = c.filter(function (a) {\n          return a instanceof Node && l(a);\n        }),\n        e = l(this);\n      la.apply(this, c);\n      for (var f = 0; f < d.length; f++) z(b, d[f]);\n      if (e) for (z(b, this), d = 0; d < c.length; d++) e = c[d], e instanceof Element && x(b, e);\n    };\n    a.remove = function () {\n      var a = l(this);\n      ma.call(this);\n      a && z(b, this);\n    };\n  }\n  ;\n  function ta() {\n    var b = Y;\n    function a(a, c) {\n      Object.defineProperty(a, \"innerHTML\", {\n        enumerable: c.enumerable,\n        configurable: !0,\n        get: c.get,\n        set: function (a) {\n          var d = this,\n            e = void 0;\n          l(this) && (e = [], n(this, function (a) {\n            a !== d && e.push(a);\n          }));\n          c.set.call(this, a);\n          if (e) for (var f = 0; f < e.length; f++) {\n            var h = e[f];\n            1 === h.__CE_state && b.disconnectedCallback(h);\n          }\n          this.ownerDocument.__CE_hasRegistry ? A(b, this) : v(b, this);\n          return a;\n        }\n      });\n    }\n    function e(a, c) {\n      q(a, \"insertAdjacentElement\", function (a, d) {\n        var e = l(d);\n        a = c.call(this, a, d);\n        e && z(b, d);\n        l(a) && x(b, d);\n        return a;\n      });\n    }\n    M ? q(Element.prototype, \"attachShadow\", function (a) {\n      return this.__CE_shadowRoot = a = M.call(this, a);\n    }) : console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");\n    if (N && N.get) a(Element.prototype, N);else if (W && W.get) a(HTMLElement.prototype, W);else {\n      var c = F.call(document, \"div\");\n      t(b, function (b) {\n        a(b, {\n          enumerable: !0,\n          configurable: !0,\n          get: function () {\n            return G.call(this, !0).innerHTML;\n          },\n          set: function (a) {\n            var b = \"template\" === this.localName ? this.content : this;\n            for (c.innerHTML = a; 0 < b.childNodes.length;) J.call(b, b.childNodes[0]);\n            for (; 0 < c.childNodes.length;) H.call(b, c.childNodes[0]);\n          }\n        });\n      });\n    }\n    q(Element.prototype, \"setAttribute\", function (a, c) {\n      if (1 !== this.__CE_state) return Q.call(this, a, c);\n      var d = O.call(this, a);\n      Q.call(this, a, c);\n      c = O.call(this, a);\n      b.attributeChangedCallback(this, a, d, c, null);\n    });\n    q(Element.prototype, \"setAttributeNS\", function (a, c, e) {\n      if (1 !== this.__CE_state) return T.call(this, a, c, e);\n      var d = S.call(this, a, c);\n      T.call(this, a, c, e);\n      e = S.call(this, a, c);\n      b.attributeChangedCallback(this, c, d, e, a);\n    });\n    q(Element.prototype, \"removeAttribute\", function (a) {\n      if (1 !== this.__CE_state) return R.call(this, a);\n      var c = O.call(this, a);\n      R.call(this, a);\n      null !== c && b.attributeChangedCallback(this, a, c, null, null);\n    });\n    q(Element.prototype, \"removeAttributeNS\", function (a, c) {\n      if (1 !== this.__CE_state) return U.call(this, a, c);\n      var d = S.call(this, a, c);\n      U.call(this, a, c);\n      var e = S.call(this, a, c);\n      d !== e && b.attributeChangedCallback(this, c, d, e, a);\n    });\n    X ? e(HTMLElement.prototype, X) : V ? e(Element.prototype, V) : console.warn(\"Custom Elements: `Element#insertAdjacentElement` was not patched.\");\n    pa(b, Element.prototype, {\n      j: ha,\n      append: ia\n    });\n    sa(b);\n  }\n  ; /*\n    Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n    This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n    The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n    The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n    Code distributed by Google as part of the polymer project is also\n    subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n    */\n  var Z = window.customElements;\n  if (!Z || Z.forcePolyfill || \"function\" != typeof Z.define || \"function\" != typeof Z.get) {\n    var Y = new r();\n    oa();\n    qa();\n    ra();\n    ta();\n    document.__CE_hasRegistry = !0;\n    var ua = new E(Y);\n    Object.defineProperty(window, \"customElements\", {\n      configurable: !0,\n      enumerable: !0,\n      value: ua\n    });\n  }\n  ;\n}).call(self);","map":{"version":3,"names":["g","aa","Set","split","k","isValidCustomElementName","b","a","has","test","l","isConnected","__CE_isImportDocument","Document","parentNode","window","ShadowRoot","host","m","nextSiblingOrAncestorSibling","nextSibling","n","walkDeepDescendantElements","e","c","nodeType","Node","ELEMENT_NODE","d","h","localName","getAttribute","import","add","firstChild","__CE_shadowRoot","q","setPropertyUnchecked","r","CustomElementInternals","Map","f","ba","set","constructor","t","push","v","w","__CE_patched","length","x","__CE_state","connectedCallback","y","z","disconnectedCallback","A","readyState","__CE_hasRegistry","addEventListener","__CE_documentLoadHandled","delete","get","constructionStack","Error","pop","__CE_definition","attributeChangedCallback","observedAttributes","prototype","call","i","indexOf","B","DocumentConstructionObserver","MutationObserver","bind","observe","childList","subtree","C","disconnect","addedNodes","ca","Deferred","Promise","D","E","CustomElementRegistry","document","Function","TypeError","SyntaxError","u","p","P","Object","va","adoptedCallback","shift","s","reject","o","define","whenDefined","polyfillWrapFlushCallback","F","createElement","da","createElementNS","ea","importNode","fa","prepend","ga","append","G","cloneNode","H","appendChild","I","insertBefore","J","removeChild","K","replaceChild","L","getOwnPropertyDescriptor","M","Element","attachShadow","N","O","Q","setAttribute","R","removeAttribute","S","getAttributeNS","T","setAttributeNS","U","removeAttributeNS","V","insertAdjacentElement","ha","ia","ja","before","ka","after","la","replaceWith","ma","remove","na","HTMLElement","W","X","oa","Y","setPrototypeOf","pa","arguments","filter","j","apply","qa","ra","patch_textContent","defineProperty","enumerable","configurable","TEXT_NODE","childNodes","Array","DocumentFragment","slice","ownerDocument","textContent","join","createTextNode","sa","ta","patch_innerHTML","patch_insertAdjacentElement","console","warn","innerHTML","content","Z","customElements","forcePolyfill","ua","value"],"sources":["src/AlreadyConstructedMarker.js","src/Utilities.js","src/CustomElementInternals.js","src/CustomElementState.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Patch/Native.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        if (Utilities.isConnected(element)) {\n          this.connectedCallback(element);\n        }\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      this.upgradeElement(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n\n    element.__CE_isConnectedCallbackCalled = true;\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    if (!element.__CE_isConnectedCallbackCalled) {\n      this.connectedCallback(element);\n    }\n\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n\n    element.__CE_isConnectedCallbackCalled = undefined;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    this._unflushedLocalNames.push(localName);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n\n    this._flushPending = false;\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._unflushedLocalNames.length > 0) {\n      const localName = this._unflushedLocalNames.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}