{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport util from '../util.js';\nimport autoStyle from '../autostyle.js';\nexport default class ModifierUtil {\n  /**\n   * @param {String} last\n   * @param {String} current\n   */\n  static diff(last, current) {\n    last = makeDict(('' + last).trim());\n    current = makeDict(('' + current).trim());\n    const removed = Object.keys(last).reduce((result, token) => {\n      if (!current[token]) {\n        result.push(token);\n      }\n      return result;\n    }, []);\n    const added = Object.keys(current).reduce((result, token) => {\n      if (!last[token]) {\n        result.push(token);\n      }\n      return result;\n    }, []);\n    return {\n      added,\n      removed\n    };\n    function makeDict(modifier) {\n      const dict = {};\n      ModifierUtil.split(modifier).forEach(token => dict[token] = token);\n      return dict;\n    }\n  }\n\n  /**\n   * @param {Object} diff\n   * @param {Array} diff.removed\n   * @param {Array} diff.added\n   * @param {Object} classList\n   * @param {String} template\n   */\n  static applyDiffToClassList(diff, classList, template) {\n    diff.added.map(modifier => template.replace(/\\*/g, modifier)).forEach(klass => klass.split(/\\s+/).forEach(k => classList.add(k)));\n    diff.removed.map(modifier => template.replace(/\\*/g, modifier)).forEach(klass => klass.split(/\\s+/).forEach(k => classList.remove(k)));\n  }\n\n  /**\n   * @param {Object} diff\n   * @param {Array} diff.removed\n   * @param {Array} diff.added\n   * @param {HTMLElement} element\n   * @param {Object} scheme\n   */\n  static applyDiffToElement(diff, element, scheme) {\n    Object.keys(scheme).forEach(selector => {\n      const targetElements = !selector || util.match(element, selector) ? [element] : Array.prototype.filter.call(element.querySelectorAll(selector), targetElement => !util.findParent(targetElement, element.tagName, parent => parent === element));\n      for (let i = 0; i < targetElements.length; i++) {\n        ModifierUtil.applyDiffToClassList(diff, targetElements[i].classList, scheme[selector]);\n      }\n    });\n  }\n\n  /**\n   * @param {String} last\n   * @param {String} current\n   * @param {HTMLElement} element\n   * @param {Object} scheme\n   */\n  static onModifierChanged(last, current, element, scheme) {\n    ModifierUtil.applyDiffToElement(ModifierUtil.diff(last, current), element, scheme);\n    autoStyle.restoreModifier(element);\n  }\n  static refresh(element, scheme) {\n    ModifierUtil.applyDiffToElement(ModifierUtil.diff('', element.getAttribute('modifier') || ''), element, scheme);\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} scheme\n   */\n  static initModifier(element, scheme) {\n    const modifier = element.getAttribute('modifier');\n    if (typeof modifier !== 'string') {\n      return;\n    }\n    ModifierUtil.applyDiffToElement({\n      removed: [],\n      added: ModifierUtil.split(modifier)\n    }, element, scheme);\n  }\n  static split(modifier) {\n    if (typeof modifier !== 'string') {\n      return [];\n    }\n    return modifier.trim().split(/ +/).filter(token => token !== '');\n  }\n\n  /**\n   * Add modifier token to an element.\n   */\n  static addModifier(element, modifierToken) {\n    if (!element.hasAttribute('modifier')) {\n      element.setAttribute('modifier', modifierToken);\n    } else {\n      const tokens = ModifierUtil.split(element.getAttribute('modifier'));\n      if (tokens.indexOf(modifierToken) == -1) {\n        tokens.push(modifierToken);\n        element.setAttribute('modifier', tokens.join(' '));\n      }\n    }\n  }\n\n  /**\n   * Remove modifier token from an element.\n   */\n  static removeModifier(element, modifierToken) {\n    if (element.hasAttribute('modifier')) {\n      const tokens = ModifierUtil.split(element.getAttribute('modifier'));\n      const index = tokens.indexOf(modifierToken);\n      if (index !== -1) {\n        tokens.splice(index, 1);\n        element.setAttribute('modifier', tokens.join(' '));\n      }\n    }\n  }\n}","map":{"version":3,"names":["util","autoStyle","ModifierUtil","diff","last","current","makeDict","trim","removed","Object","keys","reduce","result","token","push","added","modifier","dict","split","forEach","applyDiffToClassList","classList","template","map","replace","klass","k","add","remove","applyDiffToElement","element","scheme","selector","targetElements","match","Array","prototype","filter","call","querySelectorAll","targetElement","findParent","tagName","parent","i","length","onModifierChanged","restoreModifier","refresh","getAttribute","initModifier","addModifier","modifierToken","hasAttribute","setAttribute","tokens","indexOf","join","removeModifier","index","splice"],"sources":["/Users/meenho/Documents/A_techlmh/vueTests/vueOnsenUITabMenuTestCode/my-onsen-app/node_modules/onsenui/esm/ons/internal/modifier-util.js"],"sourcesContent":["/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport util from '../util.js';\nimport autoStyle from '../autostyle.js';\n\nexport default class ModifierUtil {\n  /**\n   * @param {String} last\n   * @param {String} current\n   */\n  static diff(last, current) {\n    last = makeDict(('' + last).trim());\n    current = makeDict(('' + current).trim());\n\n    const removed = Object.keys(last).reduce((result, token) => {\n      if (!current[token]) {\n        result.push(token);\n      }\n      return result;\n    }, []);\n\n    const added = Object.keys(current).reduce((result, token) => {\n      if (!last[token]) {\n        result.push(token);\n      }\n      return result;\n    }, []);\n\n    return {added, removed};\n\n    function makeDict(modifier) {\n      const dict = {};\n      ModifierUtil.split(modifier).forEach(token => dict[token] = token);\n      return dict;\n    }\n  }\n\n  /**\n   * @param {Object} diff\n   * @param {Array} diff.removed\n   * @param {Array} diff.added\n   * @param {Object} classList\n   * @param {String} template\n   */\n  static applyDiffToClassList(diff, classList, template) {\n    diff.added\n      .map(modifier => template.replace(/\\*/g, modifier))\n      .forEach(klass => klass.split(/\\s+/).forEach(k => classList.add(k)));\n\n    diff.removed\n      .map(modifier => template.replace(/\\*/g, modifier))\n      .forEach(klass => klass.split(/\\s+/).forEach(k => classList.remove(k)));\n  }\n\n  /**\n   * @param {Object} diff\n   * @param {Array} diff.removed\n   * @param {Array} diff.added\n   * @param {HTMLElement} element\n   * @param {Object} scheme\n   */\n  static applyDiffToElement(diff, element, scheme) {\n    Object.keys(scheme).forEach(selector => {\n      const targetElements = !selector || util.match(element, selector)\n        ? [element]\n        : Array.prototype.filter.call(\n            element.querySelectorAll(selector),\n            targetElement => !util.findParent(targetElement, element.tagName, parent => parent === element)\n          );\n\n      for (let i = 0; i < targetElements.length; i++) {\n        ModifierUtil.applyDiffToClassList(diff, targetElements[i].classList, scheme[selector]);\n      }\n    });\n  }\n\n  /**\n   * @param {String} last\n   * @param {String} current\n   * @param {HTMLElement} element\n   * @param {Object} scheme\n   */\n  static onModifierChanged(last, current, element, scheme) {\n    ModifierUtil.applyDiffToElement(ModifierUtil.diff(last, current), element, scheme);\n    autoStyle.restoreModifier(element);\n  }\n\n  static refresh(element, scheme) {\n    ModifierUtil.applyDiffToElement(ModifierUtil.diff('', element.getAttribute('modifier') || ''), element, scheme);\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} scheme\n   */\n  static initModifier(element, scheme) {\n    const modifier = element.getAttribute('modifier');\n    if (typeof modifier !== 'string') {\n      return;\n    }\n\n    ModifierUtil.applyDiffToElement({\n      removed: [],\n      added: ModifierUtil.split(modifier)\n    }, element, scheme);\n  }\n\n  static split(modifier) {\n    if (typeof modifier !== 'string') {\n      return [];\n    }\n\n    return modifier.trim().split(/ +/).filter(token => token !== '');\n  }\n\n  /**\n   * Add modifier token to an element.\n   */\n  static addModifier(element, modifierToken) {\n    if (!element.hasAttribute('modifier')) {\n      element.setAttribute('modifier', modifierToken);\n    } else {\n      const tokens = ModifierUtil.split(element.getAttribute('modifier'));\n      if (tokens.indexOf(modifierToken) == -1) {\n        tokens.push(modifierToken);\n        element.setAttribute('modifier', tokens.join(' '));\n      }\n    }\n  }\n\n  /**\n   * Remove modifier token from an element.\n   */\n  static removeModifier(element, modifierToken) {\n    if (element.hasAttribute('modifier')) {\n      const tokens = ModifierUtil.split(element.getAttribute('modifier'));\n      const index = tokens.indexOf(modifierToken);\n      if (index !== -1) {\n        tokens.splice(index, 1);\n        element.setAttribute('modifier', tokens.join(' '));\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}