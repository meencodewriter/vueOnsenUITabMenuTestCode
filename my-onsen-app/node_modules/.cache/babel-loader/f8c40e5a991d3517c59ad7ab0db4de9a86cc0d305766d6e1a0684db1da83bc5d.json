{"ast":null,"code":"/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport onsElements from '../ons/elements.js';\nimport util from '../ons/util.js';\nimport autoStyle from '../ons/autostyle.js';\nimport ModifierUtil from '../ons/internal/modifier-util.js';\nimport BaseElement from './base/base-element.js';\nimport contentReady from '../ons/content-ready.js';\nconst scheme = {\n  '.progress-bar': 'progress-bar--*',\n  '.progress-bar__primary': 'progress-bar--*__primary',\n  '.progress-bar__secondary': 'progress-bar--*__secondary'\n};\nconst template = util.createElement(`\n  <div class=\"progress-bar\">\n    <div class=\"progress-bar__secondary\"></div>\n    <div class=\"progress-bar__primary\"></div>\n  </div>\n`);\nconst INDET = 'indeterminate';\n\n/**\n * @element ons-progress-bar\n * @category visual\n * @modifier material\n *   [en]Display a Material Design progress bar.[/en]\n *   [ja]マテリアルデザインのスタイルでプログレスバーを表示します。[/ja]\n * @description\n *   [en]\n *     The component is used to display a linear progress bar. It can either display a progress bar that shows the user how much of a task has been completed. In the case where the percentage is not known it can be used to display an animated progress bar so the user can see that an operation is in progress.\n *   [/en]\n *   [ja][/ja]\n * @codepen zvQbGj\n * @tutorial vanilla/Reference/progress\n * @seealso ons-progress-circular\n *   [en]The `<ons-progress-circular>` component displays a circular progress indicator.[/en]\n *   [ja][/ja]\n * @example\n * <ons-progress-bar\n *  value=\"55\"\n *  secondary-value=\"87\">\n * </ons-progress-bar>\n *\n * <ons-progress-bar\n *  indeterminate>\n * </ons-progress-bar>\n */\nexport default class ProgressBarElement extends BaseElement {\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]Change the appearance of the progress indicator.[/en]\n   *   [ja]プログレスインジケータの見た目を変更します。[/ja]\n   */\n\n  /**\n   * @attribute value\n   * @type {Number}\n   * @description\n   *   [en]Current progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n\n  /**\n   * @attribute secondary-value\n   * @type {Number}\n   * @description\n   *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n\n  /**\n   * @attribute indeterminate\n   * @description\n   *   [en]If this attribute is set, an infinite looping animation will be shown.[/en]\n   *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\n   */\n\n  constructor() {\n    super();\n    contentReady(this, () => this._compile());\n  }\n  _compile() {\n    if (!this._isCompiled()) {\n      this._template = template.cloneNode(true);\n    } else {\n      this._template = util.findChild(this, '.progress-bar');\n    }\n    this._primary = util.findChild(this._template, '.progress-bar__primary');\n    this._secondary = util.findChild(this._template, '.progress-bar__secondary');\n    this._updateDeterminate();\n    this._updateValue();\n    this.appendChild(this._template);\n    autoStyle.prepare(this);\n    ModifierUtil.initModifier(this, scheme);\n  }\n  _isCompiled() {\n    if (!util.findChild(this, '.progress-bar')) {\n      return false;\n    }\n    const barElement = util.findChild(this, '.progress-bar');\n    if (!util.findChild(barElement, '.progress-bar__secondary')) {\n      return false;\n    }\n    if (!util.findChild(barElement, '.progress-bar__primary')) {\n      return false;\n    }\n    return true;\n  }\n  static get observedAttributes() {\n    return ['modifier', 'value', 'secondary-value', INDET];\n  }\n  attributeChangedCallback(name, last, current) {\n    if (name === 'modifier') {\n      ModifierUtil.onModifierChanged(last, current, this, scheme);\n      this.hasAttribute(INDET) && this._updateDeterminate();\n    } else if (name === 'value' || name === 'secondary-value') {\n      this._updateValue();\n    } else if (name === INDET) {\n      this._updateDeterminate();\n    }\n  }\n  _updateDeterminate() {\n    contentReady(this, () => util.toggleModifier(this, INDET, {\n      force: this.hasAttribute(INDET)\n    }));\n  }\n  _updateValue() {\n    contentReady(this, () => {\n      this._primary.style.width = this.hasAttribute('value') ? this.getAttribute('value') + '%' : '0%';\n      this._secondary.style.width = this.hasAttribute('secondary-value') ? this.getAttribute('secondary-value') + '%' : '0%';\n    });\n  }\n\n  /**\n   * @property value\n   * @type {Number}\n   * @description\n   *   [en]Current progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n  set value(value) {\n    if (typeof value !== 'number' || value < 0 || value > 100) {\n      util.throw('Invalid value');\n    }\n    this.setAttribute('value', Math.floor(value));\n  }\n  get value() {\n    return parseInt(this.getAttribute('value') || '0');\n  }\n\n  /**\n   * @property secondaryValue\n   * @type {Number}\n   * @description\n   *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n  set secondaryValue(value) {\n    if (typeof value !== 'number' || value < 0 || value > 100) {\n      util.throw('Invalid value');\n    }\n    this.setAttribute('secondary-value', Math.floor(value));\n  }\n  get secondaryValue() {\n    return parseInt(this.getAttribute('secondary-value') || '0');\n  }\n\n  /**\n   * @property indeterminate\n   * @type {Boolean}\n   * @description\n   *   [en]If this property is `true`, an infinite looping animation will be shown.[/en]\n   *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\n   */\n  set indeterminate(value) {\n    if (value) {\n      this.setAttribute(INDET, '');\n    } else {\n      this.removeAttribute(INDET);\n    }\n  }\n  get indeterminate() {\n    return this.hasAttribute(INDET);\n  }\n}\nonsElements.ProgressBar = ProgressBarElement;\ncustomElements.define('ons-progress-bar', ProgressBarElement);","map":{"version":3,"names":["onsElements","util","autoStyle","ModifierUtil","BaseElement","contentReady","scheme","template","createElement","INDET","ProgressBarElement","constructor","_compile","_isCompiled","_template","cloneNode","findChild","_primary","_secondary","_updateDeterminate","_updateValue","appendChild","prepare","initModifier","barElement","observedAttributes","attributeChangedCallback","name","last","current","onModifierChanged","hasAttribute","toggleModifier","force","style","width","getAttribute","value","throw","setAttribute","Math","floor","parseInt","secondaryValue","indeterminate","removeAttribute","ProgressBar","customElements","define"],"sources":["/Users/meenho/Documents/A_techlmh/vueTests/vueOnsenUITabMenuTestCode/my-onsen-app/node_modules/onsenui/esm/elements/ons-progress-bar.js"],"sourcesContent":["/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport onsElements from '../ons/elements.js';\nimport util from '../ons/util.js';\nimport autoStyle from '../ons/autostyle.js';\nimport ModifierUtil from '../ons/internal/modifier-util.js';\nimport BaseElement from './base/base-element.js';\nimport contentReady from '../ons/content-ready.js';\n\nconst scheme = {\n  '.progress-bar': 'progress-bar--*',\n  '.progress-bar__primary': 'progress-bar--*__primary',\n  '.progress-bar__secondary': 'progress-bar--*__secondary'\n};\n\nconst template = util.createElement(`\n  <div class=\"progress-bar\">\n    <div class=\"progress-bar__secondary\"></div>\n    <div class=\"progress-bar__primary\"></div>\n  </div>\n`);\n\nconst INDET = 'indeterminate';\n\n/**\n * @element ons-progress-bar\n * @category visual\n * @modifier material\n *   [en]Display a Material Design progress bar.[/en]\n *   [ja]マテリアルデザインのスタイルでプログレスバーを表示します。[/ja]\n * @description\n *   [en]\n *     The component is used to display a linear progress bar. It can either display a progress bar that shows the user how much of a task has been completed. In the case where the percentage is not known it can be used to display an animated progress bar so the user can see that an operation is in progress.\n *   [/en]\n *   [ja][/ja]\n * @codepen zvQbGj\n * @tutorial vanilla/Reference/progress\n * @seealso ons-progress-circular\n *   [en]The `<ons-progress-circular>` component displays a circular progress indicator.[/en]\n *   [ja][/ja]\n * @example\n * <ons-progress-bar\n *  value=\"55\"\n *  secondary-value=\"87\">\n * </ons-progress-bar>\n *\n * <ons-progress-bar\n *  indeterminate>\n * </ons-progress-bar>\n */\nexport default class ProgressBarElement extends BaseElement {\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]Change the appearance of the progress indicator.[/en]\n   *   [ja]プログレスインジケータの見た目を変更します。[/ja]\n   */\n\n  /**\n   * @attribute value\n   * @type {Number}\n   * @description\n   *   [en]Current progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n\n  /**\n   * @attribute secondary-value\n   * @type {Number}\n   * @description\n   *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n\n  /**\n   * @attribute indeterminate\n   * @description\n   *   [en]If this attribute is set, an infinite looping animation will be shown.[/en]\n   *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\n   */\n\n  constructor() {\n    super();\n\n    contentReady(this, () => this._compile());\n  }\n\n  _compile() {\n    if (!this._isCompiled()) {\n      this._template = template.cloneNode(true);\n    } else {\n      this._template = util.findChild(this, '.progress-bar');\n    }\n\n    this._primary = util.findChild(this._template, '.progress-bar__primary');\n    this._secondary = util.findChild(this._template, '.progress-bar__secondary');\n\n    this._updateDeterminate();\n    this._updateValue();\n\n    this.appendChild(this._template);\n\n    autoStyle.prepare(this);\n    ModifierUtil.initModifier(this, scheme);\n  }\n\n  _isCompiled() {\n    if (!util.findChild(this, '.progress-bar')) {\n      return false;\n    }\n\n    const barElement = util.findChild(this, '.progress-bar');\n\n    if (!util.findChild(barElement, '.progress-bar__secondary')) {\n      return false;\n    }\n\n    if (!util.findChild(barElement, '.progress-bar__primary')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static get observedAttributes() {\n    return ['modifier', 'value', 'secondary-value', INDET];\n  }\n\n  attributeChangedCallback(name, last, current) {\n    if (name === 'modifier') {\n      ModifierUtil.onModifierChanged(last, current, this, scheme);\n      this.hasAttribute(INDET) && this._updateDeterminate();\n    } else if (name === 'value' || name === 'secondary-value') {\n      this._updateValue();\n    } else if (name === INDET) {\n      this._updateDeterminate();\n    }\n  }\n\n  _updateDeterminate() {\n    contentReady(this, () => util.toggleModifier(this, INDET, { force: this.hasAttribute(INDET) }));\n  }\n\n  _updateValue() {\n    contentReady(this, () => {\n      this._primary.style.width = (this.hasAttribute('value')) ? this.getAttribute('value') + '%' : '0%';\n      this._secondary.style.width = this.hasAttribute('secondary-value') ? this.getAttribute('secondary-value') + '%' : '0%';\n    });\n  }\n\n  /**\n   * @property value\n   * @type {Number}\n   * @description\n   *   [en]Current progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n  set value(value) {\n    if (typeof value !== 'number' || value < 0 || value > 100) {\n      util.throw('Invalid value');\n    }\n\n    this.setAttribute('value', Math.floor(value));\n  }\n\n  get value() {\n    return parseInt(this.getAttribute('value') || '0');\n  }\n\n  /**\n   * @property secondaryValue\n   * @type {Number}\n   * @description\n   *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n  set secondaryValue(value) {\n    if (typeof value !== 'number' || value < 0 || value > 100) {\n      util.throw('Invalid value');\n    }\n\n    this.setAttribute('secondary-value', Math.floor(value));\n  }\n\n  get secondaryValue() {\n    return parseInt(this.getAttribute('secondary-value') || '0');\n  }\n\n  /**\n   * @property indeterminate\n   * @type {Boolean}\n   * @description\n   *   [en]If this property is `true`, an infinite looping animation will be shown.[/en]\n   *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\n   */\n  set indeterminate(value) {\n    if (value) {\n      this.setAttribute(INDET, '');\n    }\n    else {\n      this.removeAttribute(INDET);\n    }\n  }\n\n  get indeterminate() {\n    return this.hasAttribute(INDET);\n  }\n}\n\nonsElements.ProgressBar = ProgressBarElement;\ncustomElements.define('ons-progress-bar', ProgressBarElement);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}