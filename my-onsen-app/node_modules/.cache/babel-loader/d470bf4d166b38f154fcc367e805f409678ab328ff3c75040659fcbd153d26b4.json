{"ast":null,"code":"/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport onsElements from '../ons/elements.js';\nimport util from '../ons/util.js';\nimport autoStyle from '../ons/autostyle.js';\nimport ModifierUtil from '../ons/internal/modifier-util.js';\nimport BaseElement from './base/base-element.js';\nconst defaultClassName = 'fab fab--mini speed-dial__item';\nconst scheme = {\n  '': 'fab--* speed-dial__item--*'\n};\n\n/**\n * @element ons-speed-dial-item\n * @category control\n * @description\n *   [en]\n *     This component displays the child elements of the Material Design Speed dial component.\n *   [/en]\n *   [ja]\n *     Material DesignのSpeed dialの子要素を表現する要素です。\n *   [/ja]\n * @codepen dYQYLg\n * @tutorial vanilla/Reference/speed-dial\n * @seealso ons-speed-dial\n *   [en]The `<ons-speed-dial>` component.[/en]\n *   [ja]ons-speed-dialコンポーネント[/ja]\n * @seealso ons-fab\n *   [en]ons-fab component[/en]\n *   [ja]ons-fabコンポーネント[/ja]\n * @example\n * <ons-speed-dial position=\"left bottom\">\n *   <ons-fab>\n *     <ons-icon icon=\"fa-twitter\"></ons-icon>\n *   </ons-fab>\n *   <ons-speed-dial-item>A</ons-speed-dial-item>\n *   <ons-speed-dial-item>B</ons-speed-dial-item>\n *   <ons-speed-dial-item>C</ons-speed-dial-item>\n * </ons-speed-dial>\n */\nexport default class SpeedDialItemElement extends BaseElement {\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the component.[/en]\n   *   [ja]このコンポーネントの表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute ripple\n   * @description\n   *  [en]If this attribute is defined, the button will have a ripple effect when tapped.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @property ripple\n   * @type {Boolean}\n   * @description\n   *  [en]If this property is defined, the button will have a ripple effect when tapped.[/en]\n   *  [ja][/ja]\n   */\n\n  constructor() {\n    super();\n    this._compile();\n    this._boundOnClick = this._onClick.bind(this);\n  }\n  static get observedAttributes() {\n    return ['modifier', 'ripple', 'class'];\n  }\n  attributeChangedCallback(name, last, current) {\n    switch (name) {\n      case 'class':\n        util.restoreClass(this, defaultClassName, scheme);\n        break;\n      case 'modifier':\n        ModifierUtil.onModifierChanged(last, current, this, scheme);\n        util.addModifier(this, 'mini');\n        break;\n      case 'ripple':\n        this._updateRipple();\n    }\n  }\n  connectedCallback() {\n    this.addEventListener('click', this._boundOnClick, false);\n  }\n  disconnectedCallback() {\n    this.removeEventListener('click', this._boundOnClick, false);\n  }\n  _updateRipple() {\n    util.updateRipple(this);\n  }\n  _onClick(e) {\n    e.stopPropagation();\n  }\n  _compile() {\n    autoStyle.prepare(this);\n    defaultClassName.split(/\\s+/).forEach(token => this.classList.add(token));\n    util.addModifier(this, 'mini');\n    this._updateRipple();\n    ModifierUtil.initModifier(this, scheme);\n  }\n}\nutil.defineBooleanProperties(SpeedDialItemElement, ['ripple']);\nonsElements.SpeedDialItem = SpeedDialItemElement;\ncustomElements.define('ons-speed-dial-item', SpeedDialItemElement);","map":{"version":3,"names":["onsElements","util","autoStyle","ModifierUtil","BaseElement","defaultClassName","scheme","SpeedDialItemElement","constructor","_compile","_boundOnClick","_onClick","bind","observedAttributes","attributeChangedCallback","name","last","current","restoreClass","onModifierChanged","addModifier","_updateRipple","connectedCallback","addEventListener","disconnectedCallback","removeEventListener","updateRipple","e","stopPropagation","prepare","split","forEach","token","classList","add","initModifier","defineBooleanProperties","SpeedDialItem","customElements","define"],"sources":["/Users/meenho/Documents/A_techlmh/vueTests/vueOnsenUITabMenuTestCode/my-onsen-app/node_modules/onsenui/esm/elements/ons-speed-dial-item.js"],"sourcesContent":["/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport onsElements from '../ons/elements.js';\nimport util from '../ons/util.js';\nimport autoStyle from '../ons/autostyle.js';\nimport ModifierUtil from '../ons/internal/modifier-util.js';\nimport BaseElement from './base/base-element.js';\n\nconst defaultClassName = 'fab fab--mini speed-dial__item';\n\nconst scheme = {\n  '': 'fab--* speed-dial__item--*'\n};\n\n/**\n * @element ons-speed-dial-item\n * @category control\n * @description\n *   [en]\n *     This component displays the child elements of the Material Design Speed dial component.\n *   [/en]\n *   [ja]\n *     Material DesignのSpeed dialの子要素を表現する要素です。\n *   [/ja]\n * @codepen dYQYLg\n * @tutorial vanilla/Reference/speed-dial\n * @seealso ons-speed-dial\n *   [en]The `<ons-speed-dial>` component.[/en]\n *   [ja]ons-speed-dialコンポーネント[/ja]\n * @seealso ons-fab\n *   [en]ons-fab component[/en]\n *   [ja]ons-fabコンポーネント[/ja]\n * @example\n * <ons-speed-dial position=\"left bottom\">\n *   <ons-fab>\n *     <ons-icon icon=\"fa-twitter\"></ons-icon>\n *   </ons-fab>\n *   <ons-speed-dial-item>A</ons-speed-dial-item>\n *   <ons-speed-dial-item>B</ons-speed-dial-item>\n *   <ons-speed-dial-item>C</ons-speed-dial-item>\n * </ons-speed-dial>\n */\nexport default class SpeedDialItemElement extends BaseElement {\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the component.[/en]\n   *   [ja]このコンポーネントの表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute ripple\n   * @description\n   *  [en]If this attribute is defined, the button will have a ripple effect when tapped.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @property ripple\n   * @type {Boolean}\n   * @description\n   *  [en]If this property is defined, the button will have a ripple effect when tapped.[/en]\n   *  [ja][/ja]\n   */\n\n  constructor() {\n    super();\n\n    this._compile();\n    this._boundOnClick = this._onClick.bind(this);\n  }\n\n  static get observedAttributes() {\n    return ['modifier', 'ripple', 'class'];\n  }\n\n  attributeChangedCallback(name, last, current) {\n    switch (name) {\n      case 'class':\n        util.restoreClass(this, defaultClassName, scheme);\n        break;\n      case 'modifier':\n        ModifierUtil.onModifierChanged(last, current, this, scheme);\n        util.addModifier(this, 'mini');\n        break;\n      case 'ripple':\n        this._updateRipple();\n    }\n  }\n\n  connectedCallback() {\n    this.addEventListener('click', this._boundOnClick, false);\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener('click', this._boundOnClick, false);\n  }\n\n  _updateRipple() {\n    util.updateRipple(this);\n  }\n\n  _onClick(e) {\n    e.stopPropagation();\n  }\n\n  _compile() {\n    autoStyle.prepare(this);\n\n    defaultClassName.split(/\\s+/).forEach(token => this.classList.add(token));\n\n    util.addModifier(this, 'mini');\n    this._updateRipple();\n\n    ModifierUtil.initModifier(this, scheme);\n  }\n}\n\nutil.defineBooleanProperties(SpeedDialItemElement, ['ripple']);\n\nonsElements.SpeedDialItem = SpeedDialItemElement;\ncustomElements.define('ons-speed-dial-item', SpeedDialItemElement);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,WAAW,MAAM,wBAAwB;AAEhD,MAAMC,gBAAgB,GAAG,gCAAgC;AAEzD,MAAMC,MAAM,GAAG;EACb,EAAE,EAAE;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,oBAAoB,SAASH,WAAW,CAAC;EAE5D;AACF;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;;EAEEI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,QAAQ,CAAC,CAAC;IACf,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;EAC/C;EAEA,WAAWC,kBAAkBA,CAAA,EAAG;IAC9B,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC;EACxC;EAEAC,wBAAwBA,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;IAC5C,QAAQF,IAAI;MACV,KAAK,OAAO;QACVd,IAAI,CAACiB,YAAY,CAAC,IAAI,EAAEb,gBAAgB,EAAEC,MAAM,CAAC;QACjD;MACF,KAAK,UAAU;QACbH,YAAY,CAACgB,iBAAiB,CAACH,IAAI,EAAEC,OAAO,EAAE,IAAI,EAAEX,MAAM,CAAC;QAC3DL,IAAI,CAACmB,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC;QAC9B;MACF,KAAK,QAAQ;QACX,IAAI,CAACC,aAAa,CAAC,CAAC;IACxB;EACF;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACb,aAAa,EAAE,KAAK,CAAC;EAC3D;EAEAc,oBAAoBA,CAAA,EAAG;IACrB,IAAI,CAACC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACf,aAAa,EAAE,KAAK,CAAC;EAC9D;EAEAW,aAAaA,CAAA,EAAG;IACdpB,IAAI,CAACyB,YAAY,CAAC,IAAI,CAAC;EACzB;EAEAf,QAAQA,CAACgB,CAAC,EAAE;IACVA,CAAC,CAACC,eAAe,CAAC,CAAC;EACrB;EAEAnB,QAAQA,CAAA,EAAG;IACTP,SAAS,CAAC2B,OAAO,CAAC,IAAI,CAAC;IAEvBxB,gBAAgB,CAACyB,KAAK,CAAC,KAAK,CAAC,CAACC,OAAO,CAACC,KAAK,IAAI,IAAI,CAACC,SAAS,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAEzE/B,IAAI,CAACmB,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC;IAC9B,IAAI,CAACC,aAAa,CAAC,CAAC;IAEpBlB,YAAY,CAACgC,YAAY,CAAC,IAAI,EAAE7B,MAAM,CAAC;EACzC;AACF;AAEAL,IAAI,CAACmC,uBAAuB,CAAC7B,oBAAoB,EAAE,CAAC,QAAQ,CAAC,CAAC;AAE9DP,WAAW,CAACqC,aAAa,GAAG9B,oBAAoB;AAChD+B,cAAc,CAACC,MAAM,CAAC,qBAAqB,EAAEhC,oBAAoB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}