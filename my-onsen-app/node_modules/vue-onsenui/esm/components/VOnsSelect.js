import 'onsenui/esm/elements/ons-select';
import { modifier } from '../mixins';

//

var script = {
  name: 'v-ons-select',
  mixins: [modifier],
  model: {
    prop: 'modelProp',
    event: 'modelEvent'
  },
  props: {
    modelProp: [Number, String],
    modelEvent: {
      type: String,
      default: 'input'
    }
  },
  computed: {
    selectedValue: {
      get() {
        return this.modelProp;
      },
      set(val) {
        this.$emit('modelEvent', val);
      }
    }
  }
};

/* script */
            const __vue_script__ = script;
            
/* template */
var __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ons-select',_vm._g({attrs:{"modifier":_vm.normalizedModifier}},_vm.$listeners),[_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.selectedValue),expression:"selectedValue"}],on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.selectedValue=$event.target.multiple ? $$selectedVal : $$selectedVal[0];}}},[_vm._t("default")],2)])};
var __vue_staticRenderFns__ = [];

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* component normalizer */
  function __vue_normalize__(
    template, style, script,
    scope, functional, moduleIdentifier,
    createInjector, createInjectorSSR
  ) {
    const component = (typeof script === 'function' ? script.options : script) || {};

    // For security concerns, we use only base name in production mode.
    component.__file = "VOnsSelect.vue";

    if (!component.render) {
      component.render = template.render;
      component.staticRenderFns = template.staticRenderFns;
      component._compiled = true;

      if (functional) component.functional = true;
    }

    component._scopeId = scope;

    return component
  }
  /* style inject */
  
  /* style inject SSR */
  

  
  var VOnsSelect = __vue_normalize__(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__);

export { VOnsSelect as default };
